Sass, Scss
Sass는 css를 생산하는 언어로서 css를 프로그래밍화하여 복잡한 작업을 쉽게 할 수 있게 해주고, 코드의 재활용성을 높여줄 뿐만 아니라 코드의 가독성을 높여 유지보수를 쉽게 해줍니다.
또한 pre-precessor로서 Sass코드를 전처리하여 결과로 css코드를 추출합니다
-> 브라우저에서 해석할 수 있는 언어는 html, css, javascript 뿐이기 때문에 브라우저가 해석 가능한 언어로 변환하는 과정이 필요합니다
   typeScript, react 등 다른 언어도 각 엔진을 설치하여 자바스크립트로 컴파일하기 때문에 브라우저에서 실행할 수 있는 것입니다

Sass를 사용하기 위한 모듈 설치
yarn add node-sass


className을 짓는 모듈
조건부 스타일링을 할때 class이름을 직접 조합해주는 것보다 편하게 작성하는데 도움을 주는 모듈

<button className={['Button', size, color].join(' ')}></button>식으로 className을 지정하면 복잡
classNames("Button", "red") => Button red
classNames("Button", {red: true}) -> Button red(false일 경우 Button)
 
yarn add classnames


색상관련 
https://yeun.github.io/open-color/


css module
리엑트 프로젝트에서 컴포넌트를 스타일링할때 css module 기술을 사용하면 css클래스가 중첩되는 것을 완벽히 방지할 수 있습니다

css파일 확장자를 .module.css로 해야함


아이콘 라이브러리
yarn add react-icons

https://react-icons.github.io/react-icons/#/


styled-components
자바스크립트 안에 css를 작성하는 라이브러리
tagged template literal문법 사용

yarn add styled-components